#This script has logic to read the XML data generated by CDA and constructs a JSON file with the data needed for D3.
import xml
import os
import sys
import xml.etree.ElementTree as ET
import math
import json
import random
import io

def CreateContainerJSON(pathToXMLFile):

	print("pathToXMLFile -> " + pathToXMLFile)

	tree = ET.parse(pathToXMLFile)
	root = tree.getroot()
	context = root.findall("context")[0]
	data = []

	print("context:")
	print(context)

	for container in context.findall("container"):	
		packages = container.findall('namespace')
		containerSize = len(packages)
		pArrayData = []
		for package in packages:
			packageSize = len(package.findall('type'))
			packageName = package.get('name')
			pArrayData.append({"id": getRandomPackageName(), "name": packageName, "size": packageSize})
		lastElementIndex = len(container.get('name').split("/")) - 1;
		containerName = container.get('name').split("/")[lastElementIndex]; #CDA usually places the absolute path to the JAR file. Let's only grab the actual name.
		data.append({"id": getRandomContainerName(), "name": containerName, "size": containerSize, "children": pArrayData})

	context = {"name": root.findall('context')[0].get('name'), "children": data}

	with open('output.json', 'w') as outfile:
		json.dump(context, outfile)


def getRandomInteger():
	return str(random.randint(1, 1000000))

def getRandomPackageName():
	return "package" + str(getRandomInteger())

def getRandomContainerName():
	return "container" + str(getRandomInteger())



